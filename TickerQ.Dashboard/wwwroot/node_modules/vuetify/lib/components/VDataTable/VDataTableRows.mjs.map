{"version":3,"file":"VDataTableRows.mjs","names":["VDataTableGroupHeaderRow","VDataTableRow","useExpanded","useGroupBy","useHeaders","useSelection","makeDisplayProps","useDisplay","useLocale","Fragment","mergeProps","genericComponent","getPrefixedEventHandlers","propsFactory","useRender","makeVDataTableRowsProps","loading","Boolean","String","loadingText","type","default","hideNoData","items","Array","noDataText","rowProps","Object","Function","cellProps","VDataTableRows","name","inheritAttrs","props","setup","_ref","attrs","slots","columns","expandOnClick","toggleExpand","isExpanded","isSelected","toggleSelect","toggleGroup","isGroupOpen","t","mobile","length","_createVNode","value","_Fragment","map","item","index","slotProps","_mergeProps","id","raw","internalItem","itemSlotProps","key","onClick","undefined"],"sources":["../../../src/components/VDataTable/VDataTableRows.tsx"],"sourcesContent":["// Components\nimport { VDataTableGroupHeaderRow } from './VDataTableGroupHeaderRow'\nimport { VDataTableRow } from './VDataTableRow'\n\n// Composables\nimport { useExpanded } from './composables/expand'\nimport { useGroupBy } from './composables/group'\nimport { useHeaders } from './composables/headers'\nimport { useSelection } from './composables/select'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { Fragment, mergeProps } from 'vue'\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { Group } from './composables/group'\nimport type { CellProps, DataTableItem, GroupHeaderSlot, ItemSlot, RowProps } from './types'\nimport type { VDataTableGroupHeaderRowSlots } from './VDataTableGroupHeaderRow'\nimport type { VDataTableRowSlots } from './VDataTableRow'\nimport type { GenericProps } from '@/util'\n\nexport type VDataTableRowsSlots<T> = VDataTableGroupHeaderRowSlots & VDataTableRowSlots<T> & {\n  item: ItemSlot<T> & { props: Record<string, any> }\n  loading: never\n  'group-header': GroupHeaderSlot\n  'no-data': never\n  'expanded-row': ItemSlot<T>\n}\n\nexport const makeVDataTableRowsProps = propsFactory({\n  loading: [Boolean, String],\n  loadingText: {\n    type: String,\n    default: '$vuetify.dataIterator.loadingText',\n  },\n  hideNoData: Boolean,\n  items: {\n    type: Array as PropType<readonly (DataTableItem | Group)[]>,\n    default: () => ([]),\n  },\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  rowProps: [Object, Function] as PropType<RowProps<any>>,\n  cellProps: [Object, Function] as PropType<CellProps<any>>,\n\n  ...makeDisplayProps(),\n}, 'VDataTableRows')\n\nexport const VDataTableRows = genericComponent<new <T>(\n  props: {\n    items?: readonly (DataTableItem<T> | Group<T>)[]\n  },\n  slots: VDataTableRowsSlots<T>,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VDataTableRows',\n\n  inheritAttrs: false,\n\n  props: makeVDataTableRowsProps(),\n\n  setup (props, { attrs, slots }) {\n    const { columns } = useHeaders()\n    const { expandOnClick, toggleExpand, isExpanded } = useExpanded()\n    const { isSelected, toggleSelect } = useSelection()\n    const { toggleGroup, isGroupOpen } = useGroupBy()\n    const { t } = useLocale()\n    const { mobile } = useDisplay(props)\n\n    useRender(() => {\n      if (props.loading && (!props.items.length || slots.loading)) {\n        return (\n          <tr\n            class=\"v-data-table-rows-loading\"\n            key=\"loading\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots.loading?.() ?? t(props.loadingText) }\n            </td>\n          </tr>\n        )\n      }\n\n      if (!props.loading && !props.items.length && !props.hideNoData) {\n        return (\n          <tr\n            class=\"v-data-table-rows-no-data\"\n            key=\"no-data\"\n          >\n            <td colspan={ columns.value.length }>\n              { slots['no-data']?.() ?? t(props.noDataText) }\n            </td>\n          </tr>\n        )\n      }\n\n      return (\n        <>\n          { props.items.map((item, index) => {\n            if (item.type === 'group') {\n              const slotProps = {\n                index,\n                item,\n                columns: columns.value,\n                isExpanded,\n                toggleExpand,\n                isSelected,\n                toggleSelect,\n                toggleGroup,\n                isGroupOpen,\n              } satisfies GroupHeaderSlot\n\n              return slots['group-header'] ? slots['group-header'](slotProps) : (\n                <VDataTableGroupHeaderRow\n                  key={ `group-header_${item.id}` }\n                  item={ item }\n                  { ...getPrefixedEventHandlers(attrs, ':group-header', () => slotProps) }\n                  v-slots={ slots }\n                />\n              )\n            }\n\n            const slotProps = {\n              index,\n              item: item.raw,\n              internalItem: item,\n              columns: columns.value,\n              isExpanded,\n              toggleExpand,\n              isSelected,\n              toggleSelect,\n            } satisfies ItemSlot<any>\n\n            const itemSlotProps = {\n              ...slotProps,\n              props: mergeProps(\n                {\n                  key: `item_${item.key ?? item.index}`,\n                  onClick: expandOnClick.value ? () => {\n                    toggleExpand(item)\n                  } : undefined,\n                  index,\n                  item,\n                  cellProps: props.cellProps,\n                  mobile: mobile.value,\n                },\n                getPrefixedEventHandlers(attrs, ':row', () => slotProps),\n                typeof props.rowProps === 'function'\n                  ? props.rowProps({\n                    item: slotProps.item,\n                    index: slotProps.index,\n                    internalItem: slotProps.internalItem,\n                  })\n                  : props.rowProps,\n              ),\n            }\n\n            return (\n              <Fragment key={ itemSlotProps.props.key as string }>\n                { slots.item ? slots.item(itemSlotProps) : (\n                  <VDataTableRow\n                    { ...itemSlotProps.props }\n                    v-slots={ slots }\n                  />\n                )}\n\n                { isExpanded(item) && slots['expanded-row']?.(slotProps) }\n              </Fragment>\n            )\n          })}\n        </>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDataTableRows = InstanceType<typeof VDataTableRows>\n"],"mappings":"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","ignoreList":[]}